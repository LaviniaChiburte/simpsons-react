{"version":3,"sources":["logo.svg","Quote.js","Avatar.js","Quotes.js","Lamp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Quote","quote","character","image","src","alt","upperCase","textTransform","displayContainer","display","Avatar","firstName","lastName","children","className","style","quotes","Quotes","map","Lamp","props","handleClick","setState","on","state","light","this","onClick","toUpperCase","Component","App","working","workingOrNot","textButton","logo","Button","color","variant","size","displaySection","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e0fb53b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nconst Quote = ({ quote, character, image }) => (\n\t<figure>\n\t\t<img src={image} alt={character} />\n\t\t<figcaption>\n\t\t\t<blockquote>{quote}</blockquote>\n\t\t\t<cite>{character}</cite>\n\t\t</figcaption>\n\t</figure>\n);\n\nexport default Quote;\n","import React from 'react';\n\nconst Avatar = ({ image, firstName, lastName, children }) => (\n\t<div className=\"container\" style={displayContainer}>\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col s12\">\n\t\t\t\t<img src={image} alt=\"\" className=\"materialboxed responsive-img\" />\n\t\t\t\t<h4 className=\"white-text\">{firstName}</h4>\n\t\t\t\t<h4 className=\"pink-text\" style={upperCase}>\n\t\t\t\t\t{lastName}\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nconst upperCase = {\n\ttextTransform: 'uppercase'\n};\n\nconst displayContainer = {\n\tdisplay: 'flex'\n};\n\nexport default Avatar;\n","import React from 'react';\n// src/Quotes.js\nconst quotes = [\n\t{\n\t\tquote:\n\t\t\t\"Facts are meaningless. You could use facts to prove anything that's even remotely true.\",\n\t\tcharacter: 'Homer Simpson',\n\t\timage:\n\t\t\t'https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FHomerSimpson.png?1497567511939'\n\t},\n\t{\n\t\tquote: \"Nothing you say can upset us. We're the MTV generation.\",\n\t\tcharacter: 'Bart Simpson',\n\t\timage:\n\t\t\t'https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FBartSimpson.png?1497567511638'\n\t},\n\t{\n\t\tquote: \"That's where I saw the leprechaun...He told me to burn things.\",\n\t\tcharacter: 'Ralph Wiggum',\n\t\timage:\n\t\t\t'https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FRalphWiggum.png?1497567511523'\n\t},\n\t{\n\t\tquote:\n\t\t\t\"Hello, Simpson. I'm riding the bus today because Mother hid my car keys to punish me for talking to a woman on the phone. She was right to do it.\",\n\t\tcharacter: 'Principal Skinner',\n\t\timage:\n\t\t\t'https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FSeymourSkinner.png?1497567511460'\n\t}\n];\n\nconst Quotes = () => (\n\t<div>\n\t\t{quotes.map(quote => (\n\t\t\t<img src={quote.image} alt=\"\" />\n\t\t))}\n\t</div>\n);\n\nexport default Quotes;\n","// Lamp.js\nimport React, { Component } from 'react';\n\nclass Lamp extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ton: this.props.on\n\t\t};\n\t}\n\thandleClick = () => {\n\t\tthis.setState({ on: !this.state.on });\n\t};\n\n\trender() {\n\t\tconst light = this.state.on ? 'on' : 'off';\n\n\t\treturn (\n\t\t\t<div className=\"Lamp\">\n\t\t\t\t<button onClick={this.handleClick} className={light}>\n\t\t\t\t\t{light.toUpperCase()}\n\t\t\t\t</button>\n\t\t\t\t<figure className={light} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Lamp;\n","import React, { Component } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\n\nimport Quote from './Quote';\nimport Avatar from './Avatar';\nimport Quotes from './Quotes';\nimport Lamp from './Lamp.js';\nimport Button from '@material-ui/core/Button';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tworking: this.props.working\n\t\t};\n\t}\n\thandleClick = () => {\n\t\tthis.setState({ working: !this.state.working });\n\t};\n\n\trender() {\n\t\tconst workingOrNot = this.state.working ? 'App-logo-my-spin' : 'App-logo';\n\t\tconst textButton = this.state.working ? 'Working' : 'Break';\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<img src={logo} className={workingOrNot} alt=\"logo\" />\n\t\t\t\t<Button\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName=\"buton\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t>\n\t\t\t\t\t{textButton}\n\t\t\t\t</Button>\n\t\t\t\t<Quote\n\t\t\t\t\tquote=\"I believe the children are the future... Unless we stop them now!\"\n\t\t\t\t\tcharacter=\"Homer Simpson\"\n\t\t\t\t\timage=\"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FHomerSimpson.png?1497567511939\"\n\t\t\t\t/>\n\n\t\t\t\t<Lamp />\n\t\t\t\t<Lamp />\n\t\t\t\t<div style={displaySection}>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\timage=\"https://www.stickees.com/files/cartoon/the-simpsons/2239-bart-simpson-.png\"\n\t\t\t\t\t\tfirstName=\"Bart\"\n\t\t\t\t\t\tlastName=\"Simpson\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\timage=\"https://www.stickees.com/files/cartoon/the-simpsons/2250-lisa-simpson-sticker.png\"\n\t\t\t\t\t\tfirstName=\"Lisa\"\n\t\t\t\t\t\tlastName=\"Simpson\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\timage=\"https://www.stickees.com/files/cartoon/the-simpsons/2252-marge-simpson-sticker.png\"\n\t\t\t\t\t\tfirstName=\"Marge\"\n\t\t\t\t\t\tlastName=\"Simpson\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<h1 className=\"App-title\">Simpsons Quotes</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<Quote\n\t\t\t\t\tquote=\"Me fail English? That's unpossible\"\n\t\t\t\t\tcharacter=\"Ralph Wiggum\"\n\t\t\t\t\timage=\"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FRalphWiggum.png?1497567511523\"\n\t\t\t\t/>\n\n\t\t\t\t<Quotes />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst displaySection = {\n\tdisplay: 'flex'\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}